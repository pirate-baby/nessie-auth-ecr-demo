services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      postgres:
        condition: service_healthy
      postgres-init:
        condition: service_completed_successfully

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres-init:
    image: postgres:15
    container_name: postgres-init
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      KEYCLOAK_DB: keycloak
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: password
      NESSIE_DB: nessie
      NESSIE_USER: nessie
      NESSIE_PASSWORD: password
    volumes:
      - ./db_startup.sh:/docker-entrypoint-initdb.d/db_startup.sh
    command: bash /docker-entrypoint-initdb.d/db_startup.sh
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "psql -h $${POSTGRES_HOST} -U $${POSTGRES_USER} -d $${KEYCLOAK_DB} -c '\\q'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  nessie:
    image: projectnessie/nessie:latest
    container_name: nessie
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/nessie
      QUARKUS_DATASOURCE_USERNAME: nessie
      QUARKUS_DATASOURCE_PASSWORD: password
    ports:
      - "19120:19120"
    depends_on:
      postgres:
        condition: service_healthy
      postgres-init:
        condition: service_completed_successfully

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DOMAIN: storage
      MINIO_REGION_NAME: us-east-1
      MINIO_REGION: us-east-1
    ports:
      - "9001:9001"
      - "9000:9000"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data

volumes:
  postgres_data:
  minio_data:
